blueprint:
  name: Light Sync
  description: "Sync the on/off state and brightness of one light to another light(s)\n\nThe following recommended settings will help make the transitions more fluid:\n\n- 
    Transitions from on to off should be set to 0 for all devices\n- Initial On Level should match for all devices \n- The device settings for the Control Light 
    should not have a minimum brigtness\n- Slow down the dimming speed on the Control Light to account for lag\n\nPlease note, the Control Light brightness must be able to scale between 1-100. When Minimum Brightness is > 1, the script will ensure the Target Light never falls below that value, with an adjusted linear scale between the minimum value and 100%. Because of this, the brightness value for each light will appear different."
  domain: automation
  input:
    controlling_light:
      name: Control Light
      description: Input the light entity that will be in control
      selector:
        entity:
          filter:
          - domain:
            - light
          multiple: false
    target_light:
      name: Target Light
      description: Input the light entity/entities that will sync to the Control Light
      selector:
        entity:
          filter:
          - domain:
            - light
          multiple: true
    min_brightness:
      name: Minimum Brightness
      description: Set the minimum brightness for the target light(s), as a percentage (1-100).
      default: 1
      selector:
        number:
          min: 1
          max: 100
  source_url: https://github.com/jay-kub/ha-light-sync/blob/main/ha-light-sync.yaml
mode: restart
max_exceeded: silent
variables:
  controllingLight: !input controlling_light
  controllingLightBrightness: |
    {{ (state_attr(controllingLight, 'brightness') / 2.55) }}
  minBrightness: !input min_brightness
  brightnessValue: |
    {{ ((((100 - minBrightness) / 99 ) * controllingLightBrightness + minBrightness - (100 - minBrightness) / 99 ) * 2.55) | round(0) }}
trigger:
- platform: state
  entity_id: !input controlling_light
- platform: state
  entity_id: !input controlling_light
  attribute: brightness
condition: []
action:
  - choose:
      - conditions:
          - condition: state
            entity_id: !input controlling_light
            state: "on"
        sequence:
          - data:
              brightness: '{{ brightnessValue }}'
            action: light.turn_on
            target:
              entity_id: !input target_light
      - conditions:
          - condition: state
            entity_id: !input controlling_light
            state: "off"
        sequence:
          - data:
              entity_id: !input target_light
            action: light.turn_off